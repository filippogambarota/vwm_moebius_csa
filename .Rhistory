install.packages(c("here", "tidyverse"))
moebius %>%
filter(Running == "Exp") %>%
select(Subject, Age, Handedness, Sex, Emotion, Gender,
Memory, RT, Test) %>%
arrange(Subject, Emotion, Gender)
library(tidyverse)
moebius %>%
filter(Running == "Exp") %>%
select(Subject, Age, Handedness, Sex, Emotion, Gender,
Memory, RT, Test) %>%
arrange(Subject, Emotion, Gender)
read.table(here("data/raw/moebius_raw.txt"))
(tidyverse)
library(tidyverse)
library(here)
read.table(here("data/raw/moebius_raw.txt"))
moebius %>%
mutate(Subject = as.factor(Subject),
Test.Tag = parse_number(as.character(Test.Tag)),
Memory = parse_number(as.character(moebius$Memory)))
moebius <- read.table(here("data/raw/moebius_raw.txt"))
moebius %>%
mutate(Subject = as.factor(Subject),
Test.Tag = parse_number(as.character(Test.Tag)),
Memory = parse_number(as.character(moebius$Memory)))
moebius <- read.table(here("data/raw/moebius_raw.txt"))
moebius
moebius %>%
mutate(Subject = as.factor(Subject),
Test.Tag = parse_number(as.character(Test.Tag)),
Memory = parse_number(as.character(moebius$Memory))) %>%
rename("Test" = Test.Tag) %>%
rename( "RT" = Test.RT)
moebius %>%
mutate(Subject = as.factor(Subject),
Test.Tag = parse_number(as.character(Test.Tag)),
Memory = parse_number(as.character(moebius$Memory))) %>%
rename("Test" = Test.Tag)
moebius %>%
mutate(Subject = as.factor(Subject),
Test.Tag = parse_number(as.character(Test.Tag)),
Memory = parse_number(as.character(moebius$Memory))) %>%
rename("Test" = Test.Tag) %>%
drop_na()
moebius <- moebius %>%
mutate(Subject = as.factor(Subject),
Test.Tag = parse_number(as.character(Test.Tag)),
Memory = parse_number(as.character(moebius$Memory))) %>%
rename("Test" = Test.Tag) %>%
drop_na()
moebius$Subj_num <- as.integer(moebius$Subject)
moebius <- moebius %>%
mutate(Group = case_when(Subj_num <= 7 ~ "Moebius",
Subj_num > 7 ~ "Control")) %>%
rename("Gender_Image" = Gender) %>%
select(-Subj_num)
moebius %>%
mutate(Group = case_when(Subj_num <= 7 ~ "Moebius",
Subj_num > 7 ~ "Control")) %>%
select(-Subj_num)
moebius %>%
mutate(Group = case_when(Subj_num <= 7 ~ "Moebius",
Subj_num > 7 ~ "Control")) %>%
select(-Subj_num) %>%
arrange(Subject, Group, everything())
moebius %>%
mutate(Group = case_when(Subj_num <= 7 ~ "Moebius",
Subj_num > 7 ~ "Control")) %>%
select(-Subj_num) %>%
arrange(Subject, Group, everything())
moebius %>%
mutate(Group = case_when(Subj_num <= 7 ~ "Moebius",
Subj_num > 7 ~ "Control")) %>%
select(-Subj_num)
moebius %>%
mutate(Group = case_when(Subj_num <= 7 ~ "Moebius",
Subj_num > 7 ~ "Control")) %>%
select(Subject, Group, -Subj_num, everything()
moebius %>%
mutate(Group = case_when(Subj_num <= 7 ~ "Moebius",
Subj_num > 7 ~ "Control")) %>%
select(Subject, Group, -Subj_num, everything())
moebius %>%
mutate(Group = case_when(Subj_num <= 7 ~ "Moebius",
Subj_num > 7 ~ "Control")) %>%
select(Subject, Group, Emotion, Memory, Test)
moebius <- read.table(here("data/raw/moebius_raw.txt"))
moebius <- moebius %>%
mutate(Test.Tag = parse_number(as.character(Test.Tag)),
Memory = parse_number(as.character(moebius$Memory))) %>%
rename("Test" = Test.Tag) %>%
drop_na()
moebius %>%
mutate(Group = case_when(Subject <= 7 ~ "Moebius",
Subject > 7 ~ "Control")) %>%
select(Subject, Group, Emotion, Memory, Test)
abs(moebius$Test - moebius$Memory)
moebius %>%
mutate(Test_Memory_Abs = abs(Test - Memory))
moebius <- moebius %>%
mutate(Test_Memory_Abs = abs(Test - Memory))
x <- abs(moebius$Test - moebius$Memory)
moebius$Test_Memory_Abs == x
table(moebius$Test_Memory_Abs == x)
moebius %>%
mutate("Mem" = as.factor(
case_when(Memory == 0 ~ "Level 0",
Memory == 1 ~ "Level 1",
Memory == 2 ~ "Level 2",
Memory == 3 ~ "Level 3",
Memory == 4 ~ "Level 4",
Memory == 5 ~ "Level 5",
Memory == 6 ~ "Level 6",
Memory == 7 ~ "Level 7")))
moebius %>%
mutate(Mem = as.factor(Mem),
Emotion = as.factor(Emotion),
Group = as.factor(Group)) %>%
select(Subject, Group, Emotion, Memory, Mem, Test, Test_Memory_Abs)
moebius <- moebius %>%
mutate("Mem" = as.factor(
case_when(Memory == 0 ~ "Level 0",
Memory == 1 ~ "Level 1",
Memory == 2 ~ "Level 2",
Memory == 3 ~ "Level 3",
Memory == 4 ~ "Level 4",
Memory == 5 ~ "Level 5",
Memory == 6 ~ "Level 6",
Memory == 7 ~ "Level 7")))
moebius %>%
mutate(Mem = as.factor(Mem),
Emotion = as.factor(Emotion),
Group = as.factor(Group)) %>%
select(Subject, Group, Emotion, Memory, Mem, Test, Test_Memory_Abs)
moebius <- read.table(here("data/raw/moebius_raw.txt"))
moebius <- moebius %>%
mutate(Test.Tag = parse_number(as.character(Test.Tag)),
Memory = parse_number(as.character(moebius$Memory))) %>%
rename("Test" = Test.Tag) %>%
drop_na()
moebius <- moebius %>%
mutate(Group = case_when(Subject <= 7 ~ "Moebius",
Subject > 7 ~ "Control")) %>%
select(Subject, Group, Emotion, Memory, Test) %>%
mutate(Subject = as.factor(Subject)) # subject as factor
moebius <- moebius %>%
mutate(Test_Memory_Abs = abs(Test - Memory))
moebius <- moebius %>%
mutate("Mem" = as.factor(
case_when(Memory == 0 ~ "Level 0",
Memory == 1 ~ "Level 1",
Memory == 2 ~ "Level 2",
Memory == 3 ~ "Level 3",
Memory == 4 ~ "Level 4",
Memory == 5 ~ "Level 5",
Memory == 6 ~ "Level 6",
Memory == 7 ~ "Level 7")))
moebius %>%
mutate(Mem = as.factor(Mem),
Emotion = as.factor(Emotion),
Group = as.factor(Group)) %>%
select(Subject, Group, Emotion, Memory, Mem, Test, Test_Memory_Abs)
moebius <- read.table(here("data/raw/moebius_raw.txt"))
# Cleaning Data --------------------------------------------------------------
## Converting to character for extracting numbers, renaming and removing missing values
moebius <- moebius %>%
mutate(Test.Tag = parse_number(as.character(Test.Tag)),
Memory = parse_number(as.character(moebius$Memory))) %>%
rename("Test" = Test.Tag) %>%
drop_na()
## Creating the Group Variable
## From 1 to 7 they are moebius subject, from 8 to 37 they are the control group
moebius <- moebius %>%
mutate(Group = case_when(Subject <= 7 ~ "Moebius",
Subject > 7 ~ "Control")) %>%
select(Subject, Group, Emotion, Memory, Test) %>%
mutate(Subject = as.factor(Subject)) # subject as factor
# Creating Score Values ---------------------------------------------------
## Test - Memory
moebius <- moebius %>%
mutate(Test_Memory_Abs = abs(Test - Memory))
# Creating Memory Factor --------------------------------------------------
moebius <- moebius %>%
mutate("Mem" = as.factor(
case_when(Memory == 0 ~ "Level 0",
Memory == 1 ~ "Level 1",
Memory == 2 ~ "Level 2",
Memory == 3 ~ "Level 3",
Memory == 4 ~ "Level 4",
Memory == 5 ~ "Level 5",
Memory == 6 ~ "Level 6",
Memory == 7 ~ "Level 7")))
# Final Cleaning
moebius <- moebius %>%
mutate(Mem = as.factor(Mem),
Emotion = as.factor(Emotion),
Group = as.factor(Group)) %>%
select(Subject, Group, Emotion, Memory, Mem, Test, Test_Memory_Abs)
# Saving Datasets ---------------------------------------------------------
saveRDS(moebius, file = here("data", "cleaned", "Moebius_cleaned.rds"))
x <- readRDS(here("data", "cleaned", "Moebius_cleaned.rds"))
x
x
moebius %>%
mutate(Mem = as.factor(Mem),
Emotion = as.factor(Emotion),
Group = as.factor(Group)) %>%
select(Subject, Group, Emotion, Memory, Mem, Test, Test_Memory_Abs) %>%
arrange(Subject)
moebius %>%
mutate(Mem = as.factor(Mem),
Emotion = as.factor(Emotion),
Group = as.factor(Group)) %>%
select(Subject, Group, Emotion, Memory, Mem, Test, Test_Memory_Abs) %>%
arrange(Subject, Emotion)
moebius %>%
mutate(Mem = as.factor(Mem),
Emotion = as.factor(Emotion),
Group = as.factor(Group)) %>%
select(Subject, Group, Emotion, Memory, Mem, Test, Test_Memory_Abs) %>%
arrange(Subject, Group, Emotion)
set.seed(200)
options(scipen = 999)
# Data Cleaning -----------------------------------------------------------
# Packages
library(tidyverse)
library(here)
moebius <- read.table(here("data/raw/moebius_raw.txt"))
# Cleaning Data --------------------------------------------------------------
# Converting to character for extracting numbers, renaming
# and removing missing values
moebius <- moebius %>%
mutate(Test.Tag = parse_number(as.character(Test.Tag)),
Memory = parse_number(as.character(moebius$Memory))) %>%
rename("Test" = Test.Tag) %>%
drop_na()
# Creating the Group Variable
# From 1 to 7 they are moebius subject, from 8 to 37 they are the control group
moebius <- moebius %>%
mutate(Group = case_when(Subject <= 7 ~ "Moebius",
Subject > 7 ~ "Control")) %>%
select(Subject, Group, Emotion, Memory, Test)
# Creating Score Values ---------------------------------------------------
## Test - Memory
moebius <- moebius %>%
mutate(Test_Memory_Abs = abs(Test - Memory))
# Creating Memory Factor --------------------------------------------------
moebius <- moebius %>%
mutate("Mem" = as.factor(
case_when(Memory == 0 ~ "Level 0",
Memory == 1 ~ "Level 1",
Memory == 2 ~ "Level 2",
Memory == 3 ~ "Level 3",
Memory == 4 ~ "Level 4",
Memory == 5 ~ "Level 5",
Memory == 6 ~ "Level 6",
Memory == 7 ~ "Level 7")))
# Final Cleaning
moebius <- moebius %>%
mutate(Mem = as.factor(Mem),
Emotion = as.factor(Emotion),
Group = as.factor(Group)) %>%
select(Subject, Group, Emotion, Memory, Mem, Test, Test_Memory_Abs) %>%
arrange(Subject, Group, Emotion)
# Saving Datasets ---------------------------------------------------------
saveRDS(moebius, file = here("data", "cleaned", "moebius_cleaned.rds"))
# Data Cleaning -----------------------------------------------------------
# Packages
library(tidyverse)
library(here)
moebius <- read.table(here("data/raw/moebius_raw.txt"))
# Cleaning Data --------------------------------------------------------------
# Converting to character for extracting numbers, renaming
# and removing missing values
moebius <- moebius %>%
mutate(Test.Tag = parse_number(as.character(Test.Tag)),
Memory = parse_number(as.character(moebius$Memory))) %>%
rename("Test" = Test.Tag) %>%
drop_na()
# Creating the Group Variable
# From 1 to 7 they are moebius subject, from 8 to 37 they are the control group
moebius <- moebius %>%
mutate(Group = case_when(Subject <= 7 ~ "Moebius",
Subject > 7 ~ "Control")) %>%
select(Subject, Group, Emotion, Memory, Test)
# Creating Score Values ---------------------------------------------------
## Test - Memory
moebius <- moebius %>%
mutate(Test_Memory_Abs = abs(Test - Memory))
# Creating Memory Factor --------------------------------------------------
moebius <- moebius %>%
mutate("Mem" = as.factor(
case_when(Memory == 0 ~ "Level 0",
Memory == 1 ~ "Level 1",
Memory == 2 ~ "Level 2",
Memory == 3 ~ "Level 3",
Memory == 4 ~ "Level 4",
Memory == 5 ~ "Level 5",
Memory == 6 ~ "Level 6",
Memory == 7 ~ "Level 7")))
# Final Cleaning
moebius <- moebius %>%
mutate(Mem = as.factor(Mem),
Emotion = as.factor(Emotion),
Group = as.factor(Group)) %>%
select(Subject, Group, Emotion, Memory, Mem, Test, Test_Memory_Abs) %>%
arrange(Subject, Group, Emotion)
# Saving Datasets ---------------------------------------------------------
saveRDS(moebius, file = here("data", "cleaned", "moebius_cleaned.rds"))
moebius <- readRDS(here("data", "cleaned", "moebius_cleaned.rds"))
bf_fit
library(tidyverse)
library(here)
library(BayesFactor)
library(effects)
library(nlme)
library(MuMIn)
library(tidyverse)
library(here)
install.packages("BayesFactor")
install.packages("effects")
install.packages("MuMIn")
#### Preparing Workspace ####
set.seed(200)
options(scipen = 999)
# Packages ----------------------------------------------------------------
library(tidyverse)
library(here)
library(BayesFactor)
library(effects)
library(nlme)
library(MuMIn)
# Loading Data ------------------------------------------------------------
moebius <- readRDS(here("data", "cleaned", "moebius_cleaned.rds"))
# Bayesian Model Selection ------------------------------------------------
# This select the best model according to bayes factor
bf_fit <- generalTestBF(Test_Memory_Abs ~ Group * Emotion * Mem,
whichRandom = "Subject",
data = moebius)
bf_fit_include <- generalTestBF(Test_Memory_Abs ~ Group * Emotion * Mem,
data = moebius,
whichRandom = "Subject",
whichModels = "bottom")
# NLME --------------------------------------------------------------------
# Here we fit the full model (all factors with interactions) using the Maximum
# Likelihood for the stepwise selection
fit_lme <- lme(Test_Memory_Abs ~ Group * Emotion * Mem,
random=~1|Subject,
data = moebius,
method = "ML")
# This is the model with the heterogeneity of variance among
# Group and Emotion factors.
fit_lme_var <- lme(Test_Memory_Abs ~ Group * Emotion * Mem,
random=~1|Subject,
data = moebius,
weights=varIdent(form=~1|Group*Emotion),
method = "ML")
# Stepwise Selection ------------------------------------------------------
# This is the stepwise selection according to BIC and AIC for both models with and
# without the heterogeneity component
## AIC Model Selection
aic_fit_lme <- dredge(fit_lme, rank = "AIC",
extra = c("R^2", "adjR^2", "BIC"))
bic_fit_lme <- dredge(fit_lme, rank = "BIC",
extra = c("R^2", "adjR^2", "AIC"))
## BIC Model Selection
aic_fit_lme_var <- dredge(fit_lme_var, rank = "AIC",
extra = c("R^2", "adjR^2", "BIC"))
bic_fit_lme_var <- dredge(fit_lme_var, rank = "BIC",
extra = c("R^2", "adjR^2", "AIC"))
# Saving ------------------------------------------------------------------
save(bf_fit, bf_fit_include,
file = here("objects", "bf_fit_obj.rda"))
save(aic_fit_lme, bic_fit_lme, aic_fit_lme_var, bic_fit_lme_var, index_table_comp,
file = here("objects", "index_fit_obj.rda"))
save(bf_fit, bf_fit_include,
file = here("objects", "bf_fit_obj.rda"))
save(bf_fit, bf_fit_include,
file = here("objects", "bf_fit_obj.rda"))
save(aic_fit_lme, bic_fit_lme, aic_fit_lme_var, bic_fit_lme_var,
file = here("objects", "index_fit_obj.rda"))
